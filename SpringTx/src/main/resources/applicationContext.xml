<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="
       http://www.springframework.org/schema/beans
            http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/tx
            http://www.springframework.org/schema/tx/spring-tx.xsd
       http://www.springframework.org/schema/aop
            http://www.springframework.org/schema/aop/spring-aop.xsd
">

    <!-- 配置数据源 -->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="driverClass" value="com.mysql.jdbc.Driver"/>
        <property name="jdbcUrl" value="jdbc:mysql://localhost:3306/test"/>
        <property name="user" value="root"/>
        <property name="password" value="root"/>
    </bean>

    <!-- 配置JdbcTemplate模版 -->
    <bean id="template" class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <!-- 配置DAO层的bean -->
    <bean id="accountDao" class="com.cn.dao.impl.AccountDaoImpl">
        <property name="jdbcTemplate" ref="template"/>
    </bean>

    <!-- 配置Service业务层的bean；目标对象  内部的方法就是切点-->
    <bean id="accountService" class="com.cn.service.impl.AccountServiceImpl">
        <property name="accountDao" ref="accountDao"></property>
    </bean>

    <!-- 配置平台事务管理器 ；dao层不同的技术实现，对应用不同的事务管理器-->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <!-- transactionManager内部会从dataSource中获取Connetion，来开启事务 -->
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <!-- 通知：事务的增强（事务增强的一般是业务方法） -->
    <tx:advice id="txAdvice" transaction-manager="transactionManager"> <!-- transactionManager：平台事务管理器的bean id -->
        <!-- 设置事务的属性信息 -->
        <tx:attributes>
            <!-- 设置切点属性，切点即为被增强的方法，这里以方法为单元进行配置 -->
            <tx:method name="transfer" isolation="REPEATABLE_READ" propagation="REQUIRED" read-only="false" timeout="-1"/>
            <tx:method name="*"/>
        </tx:attributes>
    </tx:advice>

    <!-- 配置事务的aop织入 -->
    <aop:config>
        <aop:pointcut id="txPointcut" expression="execution(* com.cn.service.impl.*.*(..))"/>
        <aop:advisor advice-ref="txAdvice" pointcut-ref="txPointcut"/>
        <!-- spring 专门为事务的增强提供了advice声明通知，无需用aspect声明切面 （advice-ref：声明 通知的引用）-->
    </aop:config>
</beans>